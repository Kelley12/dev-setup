---

- name: 'manage /etc/profile.d/wca-java.sh for our webserver global variables'
  copy:
    dest: '/etc/profile.d/wca-java.sh'
    src: 'wca-java.sh'
#    group: 'wcaops'
#    mode: '0755'
#    owner: 'root'
  become: true
  when: ansible_os_family == 'RedHat'

- name: 'make temporary location to copy pem'
  shell: 'mktemp -d 2>/dev/null || mktemp -d -t "mytmpdir"' # mktemp which works for Linux and Mac
  register: tmp_mysql_pem

- name: 'add line JAVA_HOME to /etc/environment'
  lineinfile:
    dest: '/etc/environment'
    line: 'JAVA_HOME=/usr/lib/jvm/java'
    state: 'present'
  become: true
  when: ansible_os_family == 'RedHat'

- name: 'Add JAVA_HOME to /etc/sudoers file since we sudo when we run keytool'
  lineinfile:
    dest: '/etc/sudoers'
    line: 'Defaults env_keep += "JAVA_HOME"'
    state: 'present'
    validate: 'visudo -cf %s'
  become: true
  when: ansible_os_family == 'RedHat'

- name: 'copy mysql pem'
  copy:
    dest: '{{ tmp_mysql_pem.stdout }}'
    src: '../../mysql-common/files/mysql-ca.pem'

- name: 'Get N possible Java homes on Macs since devs have N JVMs and expect them all to work. This also dodges lack of Mac /etc/environment to ensure JAVA_HOME is available outside shell/.profile'
  shell: 'ls -d1 /Library/Java/JavaVirtualMachines/* | sed "s/\$/\/Contents\/Home/"'
  ignore_errors: true # because it will fail when /Library/Java/... but we can't use when or osx_java_homes will be a different shape then env_java_homes
  register: osx_java_homes

- name: 'Get Java home from environment (no trailing slash so union does not include duplicates)'
  shell: 'echo "${JAVA_HOME%/}"'
  register: env_java_homes

- name: 'Union OS X and environment Java homes'
  set_fact:
    java_homes: '{{ (osx_java_homes.stdout_lines + env_java_homes.stdout_lines) | unique}}'

- name: 'Print Java homes'
  debug:
    msg: 'Java homes are {{ java_homes }}'

# WCA-3165 Java certs used to be at {{ item }}/jre/lib/security/cacerts instead. Let this fail if directory's missing until 8's unsupported, then delete task completely.
- name: 'delete mysql ca certificate if it exists (Java 8)'
  shell: 'keytool -delete -keystore {{ item }}/jre/lib/security/cacerts -storepass "changeit" -noprompt -alias mysql'
  with_items:
    - '{{ java_homes }}'
  become: true
  ignore_errors: true
  register: command_result

- name: 'delete mysql ca certificate if it exists (Java 9+)'
  shell: 'keytool -delete -keystore {{ item }}/lib/security/cacerts -storepass "changeit" -noprompt -alias mysql'
  with_items:
    - '{{ java_homes }}'
  become: true
  ignore_errors: true
  # WCA-3165 Once Java 8's unsupported we could do a failed_when instead of ignore_errors, like:
  # failed_when: >
  #    'Alias <mysql> does not exist' not in command_result.stdout and command_result.stdout != ''
  register: command_result

# WCA-3165 Java certs used to be at {{ item }}/jre/lib/security/cacerts instead. Let this fail if directory's missing until 8's unsupported, then delete task completely.
- name: 'import mysql ca certificate to truststore (Java 8)'
  shell: 'keytool -import -file {{ tmp_mysql_pem.stdout }}/mysql-ca.pem -keystore {{ item }}/jre/lib/security/cacerts -storepass "changeit" -noprompt -alias mysql'
  with_items: '{{ java_homes }}'
  ignore_errors: true
  become: true

- name: 'import mysql ca certificate to truststore (Java 9+)'
  shell: 'keytool -import -file {{ tmp_mysql_pem.stdout }}/mysql-ca.pem -keystore {{ item }}/lib/security/cacerts -storepass "changeit" -noprompt -alias mysql'
  with_items: '{{ java_homes }}'
  # WCA-3165 Once Java 8's completely unsupported we can remove this ignore_errors:
  ignore_errors: true
  become: true

- name: 'remove temporary directory'
  file:
    path: '{{ tmp_mysql_pem.stdout }}'
    state: 'absent'
